- var link = 'compressjs'
- var title = '圖片壓縮：用 Compressor.js 自動調整品質壓縮至指定大小'
- var description = '使用 Compressor.js 實作圖片壓縮工具，自動遞減品質達到指定檔案大小，並支援 WebP 格式轉換與最大尺寸限制，適合前端專案圖片最佳化需求。'

<!DOCTYPE html>
html(lang="zh-Hant", data-theme="night")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    meta(http-equiv="X-UA-Compatible", content="ie=edge")
    title #{title} | Let's Write

    link(rel="canonical", href=`https://www.letswrite.tw/${link}/`)
    meta(property="og:url", content=`https://letswritetw.github.io/letswrite-${link}/`)

    //- meta(property="fb:app_id", content="911000986339138")
    meta(property="og:type", content="website")

    meta(property="og:site_name", content="Let's Write")
    meta(property="og:title", content=`${title} | Let's Write`)
    meta(itemprop="name", content=`${title} | Let's Write`)

    meta(name="description", content=description)
    meta(property="og:description", content=description)
    meta(itemprop="description", content=description)

    meta(itemprop="image", content=`https://letswritetw.github.io/letswrite-${link}/fb.jpg`)
    meta(property="og:image", content=`https://letswritetw.github.io/letswrite-${link}/fb.jpg`)
    meta(property="og:image:width", content="1200")
    meta(property="og:image:height", content="630")
    meta(property="og:image:alt", content=title)

    link(rel="shortcut icon", href="https://letswritetw.github.io/letswritetw/dist/img/logo_512.png")

    //- css
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/daisyui@5")
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/daisyui@5/themes.css")
    link(rel="stylesheet", href="dist/style.min.css")
    script(src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4")

    // Google Tag Manager
    script.
      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-PGQ9WQT');
  body.min-h-dvh.bg-base-200

    // Google Tag Manager (noscript)
    noscript
      iframe(src="https://www.googletagmanager.com/ns.html?id=GTM-PGQ9WQT", height="0", width="0", style="display:none;visibility:hidden")
    
    .mx-auto.max-w-6xl.p-6
      h1.mb-2.text-center.text-2xl.font-bold=title
      
      .mb-6.text-center.text-sm.text-gray-400
        p 筆記文：
          a.link.link-primary(href="https://www.letswrite.tw/compressjs/", target="_blank") Let's Write

      .grid.gap-6(class="md:grid-cols-2")
        // 左：參數與上傳
        section.card.bg-base-100.shadow-xl
          .card-body.space-y-4
            fieldset.fieldset
              legend.fieldset-legend 選擇圖片
              input#upload(type="file", accept="image/*", class="input input-primary file-input file-input-primary px-0 w-full")

            .grid.grid-cols-2.gap-4
              fieldset.fieldset
                legend.fieldset-legend 目標大小(KB)
                input#targetSize(type="number", value="600", class="input input-primary w-full")
              fieldset.fieldset
                legend.fieldset-legend 品質下限
                input#floor(type="number", step="0.01", value="0.40", class="input input-primary w-full")
              fieldset.fieldset
                legend.fieldset-legend 品質每次遞減
                input#step(type="number", step="0.01", value="0.05", class="input input-primary w-full")
              fieldset.fieldset
                legend.fieldset-legend 圖檔輸出格式
                select#mimeType.select.select-primary
                  option(value="image/webp", selected) WebP
                  option(value="image/jpeg") JPEG
                  option(value="image/png") PNG
              fieldset.fieldset
                legend.fieldset-legend 最大寬度(px)
                input#maxWidth(type="number", value="2560", class="input input-primary w-full")
              fieldset.fieldset
                legend.fieldset-legend 最大高度(px)
                input#maxHeight(type="number", value="1440", class="input input-primary w-full")

            .space-y-2
              progress#progressBar.progress.progress-success.w-full(value="0", max="100")
              #progressText.text-xs.text-gray-500 等待上傳

            button#downloadBtn.btn.btn-primary(disabled) 下載輸出檔

        // 右：預覽與資訊
        section.card.bg-base-100.shadow-xl
          .card-body.space-y-4
            .stats.stats-vertical.shadow.w-full
              .stat
                .stat-title 原圖
                #origInfo.stat-value.text-sm —
              .stat
                .stat-title 輸出
                #outInfo.stat-value.text-sm —

            .divider

            figure#previewContainer.flex.items-center.justify-center.bg-base-200.rounded-xl.p-4(class="min-h-[300px]")
              span#previewPlaceholder.text-gray-500 尚未上傳圖片
              img#preview(alt="預覽", class="max-h-[65vh] w-auto rounded-lg shadow-md hidden")
      
    .divider

    footer.mx-auto.max-w-6xl.px-6.pb-6
      .flex.justify-center.text-sm
        p 📦 套件來源：
          a.link.link-primary(href="https://github.com/fengyuanchen/compressorjs", target="_blank", rel="noopener noreferrer") Compressor.js

    script(src="https://cdn.jsdelivr.net/npm/compressorjs@1.2.1/dist/compressor.min.js")
    script.
      const $ = (id) => document.getElementById(id);
      const formatBytes = (bytes) => `${Math.round(bytes/1024)} KB`;
      const readImageDim = (blob) => new Promise((res, rej) => {
        const img = new Image();
        img.onload = () => res({ w: img.naturalWidth, h: img.naturalHeight });
        img.onerror = rej;
        img.src = URL.createObjectURL(blob);
      });
      const blobToDataURL = (blob) => new Promise((res) => {
        const r = new FileReader();
        r.onloadend = () => res(r.result);
        r.readAsDataURL(blob);
      });

      async function compressWithFloor(file, opts, onTick) {
        return new Promise((resolve, reject) => {
          let q = 1.0;
          let tries = 0;
          const maxTries = Math.max(1, Math.ceil((1 - opts.floor) / opts.step) + 1);

          const attempt = () => {
            new Compressor(file, {
              quality: q,
              mimeType: opts.mimeType,
              maxWidth: opts.maxWidth,
              maxHeight: opts.maxHeight,
              success(blob) {
                tries++;
                const pct = Math.min(100, Math.round((tries / maxTries) * 100));
                onTick?.({ q, size: blob.size, pct });

                if (blob.size > opts.targetSize && (q - opts.step) >= opts.floor) {
                  q = +(q - opts.step).toFixed(2);
                  attempt();
                } else {
                  resolve({ blob, q });
                }
              },
              error(err) { reject(err); }
            });
          };
          attempt();
        });
      }

      $('upload').addEventListener('change', async (e) => {
        const file = e.target.files?.[0];
        if (!file) return;

        const opts = {
          targetSize: parseInt($('targetSize').value,10)*1024,
          floor: parseFloat($('floor').value),
          step: parseFloat($('step').value),
          maxWidth: parseInt($('maxWidth').value,10),
          maxHeight: parseInt($('maxHeight').value,10),
          mimeType: $('mimeType').value
        };

        const origDim = await readImageDim(file);
        $('origInfo').textContent = `${origDim.w}×${origDim.h}, ${formatBytes(file.size)}`;

        $('downloadBtn').disabled = true;
        $('progressBar').value = 0;
        $('previewPlaceholder').classList.remove('hidden');
        $('preview').classList.add('hidden');

        // 檢查檔案大小是否已經小於目標大小
        if (file.size <= opts.targetSize) {
          $('progressText').textContent = '檔案已符合目標大小，無需壓縮';
          
          const dataURL = await blobToDataURL(file);
          
          $('preview').src = dataURL;
          $('previewPlaceholder').classList.add('hidden');
          $('preview').classList.remove('hidden');
          $('outInfo').textContent = `${origDim.w}×${origDim.h}, ${formatBytes(file.size)} (原圖)`;
          $('progressBar').value = 100;
          $('downloadBtn').disabled = false;

          $('downloadBtn').onclick = () => {
            const baseName = file.name.replace(/\.[^/.]+$/, "");
            const ext = opts.mimeType.split('/')[1] || 'webp';
            const a = document.createElement('a');
            a.href = dataURL;
            a.download = `${baseName}-compress.${ext}`;
            a.click();
          };
          
          return;
        }

        $('progressText').textContent = '壓縮中…';

        try {
          const { blob, q } = await compressWithFloor(
            file,
            opts,
            ({ q, size, pct }) => {
              $('progressBar').value = pct;
              $('progressText').textContent = `壓縮中… q=${q.toFixed(2)}，目前 ${formatBytes(size)}（${pct}%）`;
            }
          );

          const outDim = await readImageDim(blob);
          const dataURL = await blobToDataURL(blob);

          $('preview').src = dataURL;
          $('previewPlaceholder').classList.add('hidden');
          $('preview').classList.remove('hidden');
          $('outInfo').textContent = `${outDim.w}×${outDim.h}, ${formatBytes(blob.size)}, q=${q.toFixed(2)}`;
          $('progressBar').value = 100;
          $('progressText').textContent = '完成';
          $('downloadBtn').disabled = false;

          $('downloadBtn').onclick = () => {
            const baseName = file.name.replace(/\.[^/.]+$/, "");
            const ext = opts.mimeType.split('/')[1] || 'webp';
            const a = document.createElement('a');
            a.href = dataURL;
            a.download = `${baseName}-compress.${ext}`;
            a.click();
          };
        } catch(err) {
          console.error(err);
          $('progressText').textContent = '壓縮失敗';
          $('progressBar').value = 0;
          $('previewPlaceholder').classList.remove('hidden');
          $('preview').classList.add('hidden');
        }
      });
